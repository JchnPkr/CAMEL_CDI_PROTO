<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
  
  <persistence-unit name="CamelCdiProto" transaction-type="JTA">
    <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
    <jta-data-source>jdbc/camel/dataSource</jta-data-source>
    <properties>
      <property name="hibernate.dialect" value="org.hibernate.dialect.Oracle12cDialect" />
      <property name="connection.autocommit" value="false" />
      
       <!-- Mit WAS 9 und hibernate ist dieses zusätzliche Property notwendig da es sonst zu 
      java.sql.SQLException: Unsupported use of GenericConnection kommt -->
      <property name="javax.persistence.jtaDataSource" value="jdbc/camel/dataSource" />
 
<!--       <property name="hibernate.transaction.manager_lookup_class" -->
<!--         value="org.hibernate.transaction.WebSphereExtendedJTATransactionLookup" /> -->
<!--       <property name="jta.UserTransaction" value="java:comp/UserTransaction" /> -->
      
      <!-- Beachtung von Synonymen -->
      <property name="hibernate.synonyms" value="true" />

      <!-- Validierung der Entities beim EntityManager Startup -->
      <property name="hibernate.hbm2ddl.auto" value="validate" />

      <!-- JPA Validierung -->
      <property name="javax.persistence.validation.mode" value="none" />

      <!-- Ausgabe von SQL-Statements -->
      <property name="hibernate.show.sql" value="true" />
      <property name="hibernate.format_sql" value="true" />

      <!-- Größe eines JDBC-Batch -->
      <property name="hibernate.jdbc.batch_size" value="50" />
      
      <!-- Properties für die korrekte Verwendung einer Sequence -->
      <property name="hibernate.id.new_generator_mappings" value="true" />
      <property name="hibernate.id.optimizer.pooled.prefer_lo" value="true" />

      <!-- Sortierung von Insert- und Updatestatements in die optimale Reihenfolge -->
      <property name="hibernate.order_inserts" value="true" />
      <property name="hibernate.order_updates" value="true" />
      <!-- activate to enable batch on update -->
      <property name="hibernate.jdbc.batch_versioned_data" value="true"/>
    </properties>
  </persistence-unit>
</persistence>